// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: k8s.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type K8SPodStatus int32

const (
	K8SPodStatus_Invalid_Pod_Status K8SPodStatus = 0
	K8SPodStatus_Running            K8SPodStatus = 1
)

// Enum value maps for K8SPodStatus.
var (
	K8SPodStatus_name = map[int32]string{
		0: "Invalid_Pod_Status",
		1: "Running",
	}
	K8SPodStatus_value = map[string]int32{
		"Invalid_Pod_Status": 0,
		"Running":            1,
	}
)

func (x K8SPodStatus) Enum() *K8SPodStatus {
	p := new(K8SPodStatus)
	*p = x
	return p
}

func (x K8SPodStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (K8SPodStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_k8s_proto_enumTypes[0].Descriptor()
}

func (K8SPodStatus) Type() protoreflect.EnumType {
	return &file_k8s_proto_enumTypes[0]
}

func (x K8SPodStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use K8SPodStatus.Descriptor instead.
func (K8SPodStatus) EnumDescriptor() ([]byte, []int) {
	return file_k8s_proto_rawDescGZIP(), []int{0}
}

type K8SNodeStatus int32

const (
	K8SNodeStatus_Invalid_Node_Status K8SNodeStatus = 0
	K8SNodeStatus_Ready               K8SNodeStatus = 1
)

// Enum value maps for K8SNodeStatus.
var (
	K8SNodeStatus_name = map[int32]string{
		0: "Invalid_Node_Status",
		1: "Ready",
	}
	K8SNodeStatus_value = map[string]int32{
		"Invalid_Node_Status": 0,
		"Ready":               1,
	}
)

func (x K8SNodeStatus) Enum() *K8SNodeStatus {
	p := new(K8SNodeStatus)
	*p = x
	return p
}

func (x K8SNodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (K8SNodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_k8s_proto_enumTypes[1].Descriptor()
}

func (K8SNodeStatus) Type() protoreflect.EnumType {
	return &file_k8s_proto_enumTypes[1]
}

func (x K8SNodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use K8SNodeStatus.Descriptor instead.
func (K8SNodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_k8s_proto_rawDescGZIP(), []int{1}
}

type K8SReadyState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Outof int32 `protobuf:"varint,2,opt,name=outof,proto3" json:"outof,omitempty"`
}

func (x *K8SReadyState) Reset() {
	*x = K8SReadyState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k8s_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SReadyState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SReadyState) ProtoMessage() {}

func (x *K8SReadyState) ProtoReflect() protoreflect.Message {
	mi := &file_k8s_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SReadyState.ProtoReflect.Descriptor instead.
func (*K8SReadyState) Descriptor() ([]byte, []int) {
	return file_k8s_proto_rawDescGZIP(), []int{0}
}

func (x *K8SReadyState) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *K8SReadyState) GetOutof() int32 {
	if x != nil {
		return x.Outof
	}
	return 0
}

type K8SRestartsState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Ago   string `protobuf:"bytes,2,opt,name=ago,proto3" json:"ago,omitempty"`
}

func (x *K8SRestartsState) Reset() {
	*x = K8SRestartsState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k8s_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SRestartsState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SRestartsState) ProtoMessage() {}

func (x *K8SRestartsState) ProtoReflect() protoreflect.Message {
	mi := &file_k8s_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SRestartsState.ProtoReflect.Descriptor instead.
func (*K8SRestartsState) Descriptor() ([]byte, []int) {
	return file_k8s_proto_rawDescGZIP(), []int{1}
}

func (x *K8SRestartsState) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *K8SRestartsState) GetAgo() string {
	if x != nil {
		return x.Ago
	}
	return ""
}

type K8SClusterList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*K8SCluster `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *K8SClusterList) Reset() {
	*x = K8SClusterList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k8s_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SClusterList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SClusterList) ProtoMessage() {}

func (x *K8SClusterList) ProtoReflect() protoreflect.Message {
	mi := &file_k8s_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SClusterList.ProtoReflect.Descriptor instead.
func (*K8SClusterList) Descriptor() ([]byte, []int) {
	return file_k8s_proto_rawDescGZIP(), []int{2}
}

func (x *K8SClusterList) GetList() []*K8SCluster {
	if x != nil {
		return x.List
	}
	return nil
}

type K8SCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Nodes map[string]*K8SNode `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Pods  map[string]*K8SPod  `protobuf:"bytes,3,rep,name=pods,proto3" json:"pods,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *K8SCluster) Reset() {
	*x = K8SCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k8s_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SCluster) ProtoMessage() {}

func (x *K8SCluster) ProtoReflect() protoreflect.Message {
	mi := &file_k8s_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SCluster.ProtoReflect.Descriptor instead.
func (*K8SCluster) Descriptor() ([]byte, []int) {
	return file_k8s_proto_rawDescGZIP(), []int{3}
}

func (x *K8SCluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *K8SCluster) GetNodes() map[string]*K8SNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *K8SCluster) GetPods() map[string]*K8SPod {
	if x != nil {
		return x.Pods
	}
	return nil
}

type K8SPod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace      string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name           string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ready          *K8SReadyState    `protobuf:"bytes,3,opt,name=ready,proto3" json:"ready,omitempty"`
	Status         K8SPodStatus      `protobuf:"varint,4,opt,name=status,proto3,enum=types.K8SPodStatus" json:"status,omitempty"`
	Restarts       *K8SRestartsState `protobuf:"bytes,5,opt,name=restarts,proto3" json:"restarts,omitempty"`
	Age            string            `protobuf:"bytes,6,opt,name=age,proto3" json:"age,omitempty"`
	Ip             string            `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`
	Node           string            `protobuf:"bytes,8,opt,name=node,proto3" json:"node,omitempty"`
	NominatedNode  string            `protobuf:"bytes,9,opt,name=nominated_node,json=nominatedNode,proto3" json:"nominated_node,omitempty"`
	ReadinessGates string            `protobuf:"bytes,10,opt,name=readiness_gates,json=readinessGates,proto3" json:"readiness_gates,omitempty"`
}

func (x *K8SPod) Reset() {
	*x = K8SPod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k8s_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SPod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SPod) ProtoMessage() {}

func (x *K8SPod) ProtoReflect() protoreflect.Message {
	mi := &file_k8s_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SPod.ProtoReflect.Descriptor instead.
func (*K8SPod) Descriptor() ([]byte, []int) {
	return file_k8s_proto_rawDescGZIP(), []int{4}
}

func (x *K8SPod) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *K8SPod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *K8SPod) GetReady() *K8SReadyState {
	if x != nil {
		return x.Ready
	}
	return nil
}

func (x *K8SPod) GetStatus() K8SPodStatus {
	if x != nil {
		return x.Status
	}
	return K8SPodStatus_Invalid_Pod_Status
}

func (x *K8SPod) GetRestarts() *K8SRestartsState {
	if x != nil {
		return x.Restarts
	}
	return nil
}

func (x *K8SPod) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *K8SPod) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *K8SPod) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *K8SPod) GetNominatedNode() string {
	if x != nil {
		return x.NominatedNode
	}
	return ""
}

func (x *K8SPod) GetReadinessGates() string {
	if x != nil {
		return x.ReadinessGates
	}
	return ""
}

type K8SNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status           K8SNodeStatus `protobuf:"varint,2,opt,name=status,proto3,enum=types.K8SNodeStatus" json:"status,omitempty"`
	Roles            string        `protobuf:"bytes,3,opt,name=roles,proto3" json:"roles,omitempty"`
	Age              string        `protobuf:"bytes,4,opt,name=age,proto3" json:"age,omitempty"`
	Version          string        `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	InternalIp       string        `protobuf:"bytes,6,opt,name=internal_ip,json=internalIp,proto3" json:"internal_ip,omitempty"`
	ExternalIp       string        `protobuf:"bytes,7,opt,name=external_ip,json=externalIp,proto3" json:"external_ip,omitempty"`
	OsImage          string        `protobuf:"bytes,8,opt,name=os_image,json=osImage,proto3" json:"os_image,omitempty"`
	KernelVersion    string        `protobuf:"bytes,9,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	ContainerRuntime string        `protobuf:"bytes,10,opt,name=container_runtime,json=containerRuntime,proto3" json:"container_runtime,omitempty"`
}

func (x *K8SNode) Reset() {
	*x = K8SNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k8s_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SNode) ProtoMessage() {}

func (x *K8SNode) ProtoReflect() protoreflect.Message {
	mi := &file_k8s_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SNode.ProtoReflect.Descriptor instead.
func (*K8SNode) Descriptor() ([]byte, []int) {
	return file_k8s_proto_rawDescGZIP(), []int{5}
}

func (x *K8SNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *K8SNode) GetStatus() K8SNodeStatus {
	if x != nil {
		return x.Status
	}
	return K8SNodeStatus_Invalid_Node_Status
}

func (x *K8SNode) GetRoles() string {
	if x != nil {
		return x.Roles
	}
	return ""
}

func (x *K8SNode) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *K8SNode) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *K8SNode) GetInternalIp() string {
	if x != nil {
		return x.InternalIp
	}
	return ""
}

func (x *K8SNode) GetExternalIp() string {
	if x != nil {
		return x.ExternalIp
	}
	return ""
}

func (x *K8SNode) GetOsImage() string {
	if x != nil {
		return x.OsImage
	}
	return ""
}

func (x *K8SNode) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *K8SNode) GetContainerRuntime() string {
	if x != nil {
		return x.ContainerRuntime
	}
	return ""
}

var File_k8s_proto protoreflect.FileDescriptor

var file_k8s_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6b, 0x38, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x22, 0x3b, 0x0a, 0x0d, 0x4b, 0x38, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x75, 0x74,
	0x6f, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x22,
	0x3a, 0x0a, 0x10, 0x4b, 0x38, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x67, 0x6f, 0x22, 0x37, 0x0a, 0x0e, 0x4b,
	0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x4b, 0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x97, 0x02, 0x0a, 0x0a, 0x4b, 0x38, 0x73, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4b,
	0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x70,
	0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x4b, 0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x1a, 0x48, 0x0a, 0x0a,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x4b, 0x38, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x46, 0x0a, 0x09, 0x50, 0x6f, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4b, 0x38, 0x73,
	0x50, 0x6f, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xce,
	0x02, 0x0a, 0x06, 0x4b, 0x38, 0x73, 0x50, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x4b, 0x38, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x4b, 0x38, 0x73, 0x50, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4b,
	0x38, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x47, 0x61, 0x74, 0x65, 0x73, 0x22,
	0xbe, 0x02, 0x0a, 0x07, 0x4b, 0x38, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4b, 0x38, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x70,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x70, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x73, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2a, 0x33, 0x0a, 0x0c, 0x4b, 0x38, 0x73, 0x50, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x50, 0x6f, 0x64, 0x5f,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x10, 0x01, 0x2a, 0x33, 0x0a, 0x0d, 0x4b, 0x38, 0x73, 0x4e, 0x6f, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x5f, 0x4e, 0x6f, 0x64, 0x65, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x10, 0x01, 0x42, 0x21, 0x0a, 0x0d, 0x63, 0x6f,
	0x6d, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x42, 0x05, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x50, 0x01, 0x5a, 0x07, 0x2e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_k8s_proto_rawDescOnce sync.Once
	file_k8s_proto_rawDescData = file_k8s_proto_rawDesc
)

func file_k8s_proto_rawDescGZIP() []byte {
	file_k8s_proto_rawDescOnce.Do(func() {
		file_k8s_proto_rawDescData = protoimpl.X.CompressGZIP(file_k8s_proto_rawDescData)
	})
	return file_k8s_proto_rawDescData
}

var file_k8s_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_k8s_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_k8s_proto_goTypes = []interface{}{
	(K8SPodStatus)(0),        // 0: types.K8sPodStatus
	(K8SNodeStatus)(0),       // 1: types.K8sNodeStatus
	(*K8SReadyState)(nil),    // 2: types.K8sReadyState
	(*K8SRestartsState)(nil), // 3: types.K8sRestartsState
	(*K8SClusterList)(nil),   // 4: types.K8sClusterList
	(*K8SCluster)(nil),       // 5: types.K8sCluster
	(*K8SPod)(nil),           // 6: types.K8sPod
	(*K8SNode)(nil),          // 7: types.K8sNode
	nil,                      // 8: types.K8sCluster.NodesEntry
	nil,                      // 9: types.K8sCluster.PodsEntry
}
var file_k8s_proto_depIdxs = []int32{
	5, // 0: types.K8sClusterList.list:type_name -> types.K8sCluster
	8, // 1: types.K8sCluster.nodes:type_name -> types.K8sCluster.NodesEntry
	9, // 2: types.K8sCluster.pods:type_name -> types.K8sCluster.PodsEntry
	2, // 3: types.K8sPod.ready:type_name -> types.K8sReadyState
	0, // 4: types.K8sPod.status:type_name -> types.K8sPodStatus
	3, // 5: types.K8sPod.restarts:type_name -> types.K8sRestartsState
	1, // 6: types.K8sNode.status:type_name -> types.K8sNodeStatus
	7, // 7: types.K8sCluster.NodesEntry.value:type_name -> types.K8sNode
	6, // 8: types.K8sCluster.PodsEntry.value:type_name -> types.K8sPod
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_k8s_proto_init() }
func file_k8s_proto_init() {
	if File_k8s_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_k8s_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SReadyState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k8s_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SRestartsState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k8s_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SClusterList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k8s_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k8s_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SPod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k8s_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_k8s_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_k8s_proto_goTypes,
		DependencyIndexes: file_k8s_proto_depIdxs,
		EnumInfos:         file_k8s_proto_enumTypes,
		MessageInfos:      file_k8s_proto_msgTypes,
	}.Build()
	File_k8s_proto = out.File
	file_k8s_proto_rawDesc = nil
	file_k8s_proto_goTypes = nil
	file_k8s_proto_depIdxs = nil
}
